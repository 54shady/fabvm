#!/bin/bash

source net_util

check_bridge()
{
	if brctl show | grep "^$1" > /dev/null 2> /dev/null; then
		return 1
	else
		return 0
	fi
}

create_bridge()
{
	brctl addbr "$1"
	brctl stp "$1" off
	brctl setfd "$1" 0
	ifconfig "$1" "$GATEWAY" netmask "$NETMASK" up
}

enable_ip_forward()
{
	echo 1 | dd of=/proc/sys/net/ipv4/ip_forward > /dev/null
}

add_filter_rules()
{
	iptables -t nat -A POSTROUTING -s $NETWORK/$NETMASK -j MASQUERADE
	iptables -t filter -A INPUT -i $BRIDGE -p tcp -m tcp --dport 67 -j ACCEPT
	iptables -t filter -A INPUT -i $BRIDGE -p udp -m udp --dport 67 -j ACCEPT
	iptables -t filter -A INPUT -i $BRIDGE -p tcp -m tcp --dport 53 -j ACCEPT
	iptables -t filter -A INPUT -i $BRIDGE -p udp -m udp --dport 53 -j ACCEPT
	iptables -t filter -A FORWARD -i $1 -o $1 -j ACCEPT
	iptables -t filter -A FORWARD -s $NETWORK/$NETMASK -i $BRIDGE -j ACCEPT
	iptables -t filter -A FORWARD -d $NETWORK/$NETMASK -o $BRIDGE -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -t filter -A FORWARD -o $BRIDGE -j REJECT --reject-with icmp-port-unreachable
	iptables -t filter -A FORWARD -i $BRIDGE -j REJECT --reject-with icmp-port-unreachable
}

start_dnsmasq()
{
	dnsmasq \
		--strict-order \
		--except-interface=lo \
		--interface=$BRIDGE \
		--listen-address=$GATEWAY \
		--bind-interfaces \
		--dhcp-range=$DHCPRANGE \
		--conf-file="" \
		--pid-file=/var/run/qemu-dnsmasq-$BRIDGE.pid \
		--dhcp-leasefile=/var/run/qemu-dnsmasq-$BRIDGE.leases \
		--dhcp-no-override
}

setup_bridge_nat()
{
	if check_bridge "$1" ; then
		pickip=`python -c 'import fall; print fall.get_netcard()'`
		setup_network $pickip
		create_bridge "$1"
		enable_ip_forward
		add_filter_rules "$1"
		start_dnsmasq "$1"
	fi
}

setup_bridge_nat "$BRIDGE"

if test "$1" ; then
	ifconfig "$1" 0.0.0.0 up
	brctl addif "$BRIDGE" "$1"
fi
